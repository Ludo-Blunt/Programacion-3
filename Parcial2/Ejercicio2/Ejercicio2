import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Ejercicio2 {

    static class ColaCircularEnteros {
        private int[] datos;
        private int cabeza;
        private int cola;
        private int tam;

        public ColaCircularEnteros(int capacidad) {
            if (capacidad <= 0) capacidad = 1;           
            datos = new int[capacidad];
            cabeza = 0;
            cola = 0;   
            tam = 0;  
        }

        public boolean estaVacia() {
            return tam == 0; 
        }

        public boolean estaLlena() {
            return tam == datos.length;
        }

        public void encolar(int x) {
            if (estaLlena())
                throw new IllegalStateException("Cola llena"); 
            datos[cola] = x; 
            cola = (cola + 1) % datos.length;
            tam++;
        }

        public int desencolar() {
            if (estaVacia())
                throw new IllegalStateException("Cola vacia");
            int v = datos[cabeza]; 
            cabeza = (cabeza + 1) % datos.length; 
            tam--; 
            return v;
        }
    }

    // (50 pts) Calcula el balance de paréntesis encolando +1 y -1.
    public static int balanceConCola(String s) {
        ColaCircularEnteros cola = new ColaCircularEnteros(s.length()); // creo la cola con capacidad igual a la longitud de la cadena
        for (int i = 0; i < s.length(); i++) {  // recorro cada caracter de la cadena
            char c = s.charAt(i);  // obtengo el caracter actual
            if (c == '(') {  // si es paréntesis de apertura
                cola.encolar(1);  // encolo un +1
            } else if (c == ')') {  // si es paréntesis de cierre
                cola.encolar(-1);  // encolo un -1
            }
        }
        int suma = 0;  // inicializo la suma total
        while (!cola.estaVacia()) {  // mientras la cola no esté vacía
        suma += cola.desencolar();  // saco y sumo cada valor
        }
        return suma;  // retorno la suma final del balance
        }

    // (50 pts) Registra intentos por nombre en un mapa.
    public static int registrarIntento(Map<String,Integer> intentos, String nombre) {
        if (intentos.containsKey(nombre)) {  // si el nombre ya existe en el mapa
            int valor = intentos.get(nombre); // obtengo el valor actual
            valor++;  // incremento el contador
            intentos.put(nombre, valor);  // actualizo el mapa con el nuevo valor
        } 
        else 
        {
            intentos.put(nombre, 1);  // si no existe, lo inicio en 1
        }
        return 0;
        }

